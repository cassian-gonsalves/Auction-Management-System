/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AnalystRole;


import Business.Auction.Auction;
import Business.Enterprise.Enterprise;
import Business.Member.Dealer;
import Business.Member.Member;
import Business.Organization.DealerOrganization;
import Business.Organization.Organization;
import Business.Product.Product;
import java.awt.CardLayout;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author cassiangonsalves
 */
public class AnalystResults extends javax.swing.JPanel {

     JPanel userProcessContainer;
     Enterprise enterprise;
    /**
     * Creates new form ViewFlights
     */
    public AnalystResults(JPanel upc, Enterprise enterprise) {
      initComponents();
      userProcessContainer = upc;
      this.enterprise = enterprise;
      refreshTable();
    }
   
    private void refreshTable()
    {
        int rowCount = productAnalysisTable.getRowCount();
        DefaultTableModel productAnalysisTableModel = (DefaultTableModel)productAnalysisTable.getModel();
        for(int i = rowCount-1; i>=0; i--)
        {
            productAnalysisTableModel.removeRow(i);
        }
        
        int rowCount2 = dealerAnalysisTable.getRowCount();
        DefaultTableModel dealerAnalysisTableModel = (DefaultTableModel)dealerAnalysisTable.getModel();
        for(int i = rowCount2-1; i>=0; i--)
        {
            dealerAnalysisTableModel.removeRow(i);
        }
        
        List<Dealer> dealersList = new ArrayList<>();
        List<Product> productsList = new ArrayList<>();
        
        for(Organization org : this.enterprise.getOrganizationsList())
        {
            if(org instanceof DealerOrganization)
            {
                for(Member member: org.getMemberDirectory().getMembersList())
                {
                    Dealer dealer = (Dealer)member;
                    dealersList.add(dealer);
                    for(Auction auction: dealer.getAuctionList())
                    {
                         for(Product product: auction.getProductsList())
                        {
                            if(product.getBiddingStatus())
                                productsList.add(product);
                        }
                    }
                }
            }
        }

        if(!dealersList.isEmpty())
            dealersList.sort(Dealer.sortByRevenue());
        
        if(!productsList.isEmpty())
            productsList.sort(Product.sortByMaxBidAmount());
        
        for(Product product: productsList)
        {
            Object row[] = new Object[2];
            row[0] = product;
            row[1] = product.getMaximumBid().getBidAmount();
            productAnalysisTableModel.addRow(row);
        }
        
        for(Dealer dealer: dealersList)
        {
            Object row[] = new Object[3];
            row[0] =  dealer.getId();
            row[1] = dealer;
            row[2] = dealer.getRevenue();
            dealerAnalysisTableModel.addRow(row);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        flightCompany = new javax.swing.JLabel();
        backButton5 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        dealerAnalysisTable = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        productAnalysisTable = new javax.swing.JTable();
        flightCompany1 = new javax.swing.JLabel();
        flightCompany2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(153, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        flightCompany.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        flightCompany.setText("Product with maximum bid");
        add(flightCompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, 320, -1));

        backButton5.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        backButton5.setText("<< Back");
        backButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton5ActionPerformed(evt);
            }
        });
        add(backButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 20, 190, -1));

        dealerAnalysisTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        dealerAnalysisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Dealer Id", "Dealer Name", "Revenue"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(dealerAnalysisTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 680, 130));

        productAnalysisTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        productAnalysisTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Max Bid Amount"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(productAnalysisTable);

        add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 680, 130));

        flightCompany1.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        flightCompany1.setText("Analysis");
        add(flightCompany1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 170, -1));

        flightCompany2.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        flightCompany2.setText("Dealer Revenue");
        add(flightCompany2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 170, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void backButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton5ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton5;
    private javax.swing.JTable dealerAnalysisTable;
    private javax.swing.JLabel flightCompany;
    private javax.swing.JLabel flightCompany1;
    private javax.swing.JLabel flightCompany2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable productAnalysisTable;
    // End of variables declaration//GEN-END:variables
}
