/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;


import Business.Auction.Auction;
import Business.Enterprise.Enterprise;
import Business.Member.Dealer;
import Business.Member.DeliveryAdmin;
import Business.Member.Member;
import Business.Organization.DealerOrganization;
import Business.Organization.DeliveryAdminOrganization;
import Business.Organization.Organization;
import Business.Product.Product;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author cassiangonsalves
 */
public class PurchasedProducts extends javax.swing.JPanel {

    
    /**
     * Creates new form ViewFlights
     */
    private JPanel userProcessContainer;
    private Enterprise enterprise;
    private Member customer;
    private DeliveryAdmin deliveryAdmin;
    
    public PurchasedProducts(JPanel userProcessContainer, Enterprise enterprise, Member customer) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.customer = customer;
        for(Organization organization:enterprise.getOrganizationsList())
        {
            if(organization instanceof DeliveryAdminOrganization)
            {
                deliveryAdmin = (DeliveryAdmin)organization.getMemberDirectory().getMembersList().get(0);
            }
        }
        refreshTable();        
    }
   
    private void refreshTable()
    {
        int rowCount = purchasedProductTable.getRowCount();
        DefaultTableModel model = (DefaultTableModel)purchasedProductTable.getModel();
        for(int i = rowCount-1; i>=0; i--)
        {
            model.removeRow(i);
        }
        
        for(Organization org : this.enterprise.getOrganizationsList())
        {
            if(org instanceof DealerOrganization)
            {
                for(Member member: org.getMemberDirectory().getMembersList())
                {
                    Dealer dealer = (Dealer)member;
                    for(Auction auction: dealer.getAuctionList())
                    {
                        for(Product product: auction.getProductsList())
                        {
                            if(product.getBiddingStatus() && product.getMaximumBid().getCustomer().getId()==this.customer.getId())
                            {
                                    Object row[] = new Object[2];
                                    row[0] =  product;
                                    row[1] =  deliveryAdmin.getProductStatus(product);
                                    model.addRow(row);
                            }
                        }
                    }
                }
            }
        }
    }  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        flightCompany = new javax.swing.JLabel();
        backButton4 = new javax.swing.JButton();
        deliveryButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        purchasedProductTable = new javax.swing.JTable();

        setBackground(new java.awt.Color(153, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        flightCompany.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        flightCompany.setText("Products Purchased");
        add(flightCompany, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 220, -1));

        backButton4.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        backButton4.setText("<< Back");
        backButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton4ActionPerformed(evt);
            }
        });
        add(backButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 20, 190, -1));

        deliveryButton.setFont(new java.awt.Font("Tahoma", 2, 13)); // NOI18N
        deliveryButton.setText("Delivery Request");
        deliveryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deliveryButtonActionPerformed(evt);
            }
        });
        add(deliveryButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 200, -1));

        purchasedProductTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        purchasedProductTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product Name", "Status"
            }
        ));
        jScrollPane1.setViewportView(purchasedProductTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 580, 180));
    }// </editor-fold>//GEN-END:initComponents

    private void deliveryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deliveryButtonActionPerformed
        int row = purchasedProductTable.getSelectedRow();
        if(row<0) {
             JOptionPane.showMessageDialog(null, "Please select a row from the table", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        Product product = (Product)purchasedProductTable.getValueAt(row, 0);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        DeliveryDetails dd = new DeliveryDetails(userProcessContainer, product, customer,enterprise);
        userProcessContainer.add(dd);
        layout.next(userProcessContainer);
    }//GEN-LAST:event_deliveryButtonActionPerformed

    private void backButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton4ActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton4;
    private javax.swing.JButton deliveryButton;
    private javax.swing.JLabel flightCompany;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable purchasedProductTable;
    // End of variables declaration//GEN-END:variables
}
